const Level = require( './level' );

module.exports = [
    new Level(
        'Первый уровень: основы',

        '                  ' + '\n' +
        '                  ' + '\n' +
        '                  ' + '\n' +
        '                  ' + '\n' +
        '       bbbbb      ' + '\n' +
        '                  ' + '\n' +
        '                  ' + '\n' +
        '         t        ' + '\n' +
        '                  ' + '\n' +
        '         p        ' + '\n' +
        '                  ' + '\n' +
        '                  ' + '\n' +
        '                  ' + '\n' +
        '                  ' + '\n' +
        '                  ' + '\n' +
        '                  ',

        '<p>Напиши программу которая заведёт танк на клетку с кружком.\
        В программе используй команду <span class="inline-code">forward</span>\
        которая передвигает танк вперёд на одну клетку.\
        После команды поставь скобки <span class="inline-code">()</span>\
        и точку с запятой <span class="inline-code">;</span>.\
        <p>Например:\
            <pre><code class="js">' +
                'forward();\n'+
            '</code></pre>\
        <p>Написав программу, нажми кнопку <span class="inline-code">Запуск</span>.',

        [
            { name: 'forward()', description: 'ехать вперёд' },
        ]
    ),

    new Level(
        'Второй уровень: повороты',

        'bbbbbbbbbbbbbbbbbb' + '\n' +
        '                  ' + '\n' +
        '                  ' + '\n' +
        '                  ' + '\n' +
        '                  ' + '\n' +
        '                  ' + '\n' +
        '                  ' + '\n' +
        '       p          ' + '\n' +
        '         t        ' + '\n' +
        '                  ' + '\n' +
        '                  ' + '\n' +
        '                  ' + '\n' +
        '                  ' + '\n' +
        '                  ' + '\n' +
        '                  ' + '\n' +
        'bbbbbbbbbbbbbbbbbb',

        '<p>Для поворота танка налево и направо используй команды\
        <span class="inline-code">left</span> и <span class="inline-code">right</span>.\
        <p>Обрати внимание, что ниже есть справочник, где перечислены все команды которые\
        можно использовать.',

        [
            { name: 'forward()', description: 'ехать вперёд' },
            { name: 'left()', description: 'повернуть налево' },
            { name: 'right()', description: 'повернуть направо' },
        ]
    ),

    new Level(
        'Третий уровень: зачем нужны скобки?',

        'bbbb          bbbb' + '\n' +
        'b                b' + '\n' +
        'b p              b' + '\n' +
        'b                b' + '\n' +
        '                  ' + '\n' +
        '                  ' + '\n' +
        '                  ' + '\n' +
        '        bb        ' + '\n' +
        '        bb        ' + '\n' +
        '                  ' + '\n' +
        '                  ' + '\n' +
        '                  ' + '\n' +
        'b                b' + '\n' +
        'b              t b' + '\n' +
        'b                b' + '\n' +
        'bbbb          bbbb',

        '<p>Ты помнишь что после каждой команды ставятся скобки? Это неспроста!\
        Между скобками можно записать число.\
        Например, вот так: <span class="inline-code">left(2)</span>.\
        Число <span class="inline-code">2</span> как бы говорит команде:\
        сделай поворот два раза, а не один, как было в прошлых уровнях.\
        То есть, вместо вот такого:\
            <pre><code class="js">' +
                'left();\n'+
                'left();\n'+
            '</code></pre>\
        можно написать так:\
            <pre><code class="js">' +
                'left(2);\n'+
            '</code></pre>\
        Для команд <span class="inline-code">right</span> и <span class="inline-code">forward</span>\
        тоже можно написать в скобках число. И тогда танк будет поворачивать и ехать сколько раз,\
        сколько написано между скобок.\
        <p>В этом задании приведи танк на клетку с кружком четыремя командами.\
        Четырёх команд хватит – ведь теперь ты знаешь для чего после них ставятся скобки.',

        [
            { name: 'forward( разы = 1 )', description: 'ехать вперёд' },
            { name: 'left( разы = 1 )', description: 'повернуть налево' },
            { name: 'right( разы = 1 )', description: 'повернуть направо' },
        ]
    ),

    new Level(
        'Четвёртый уровень: как это называется?',

        '  b            b  ' + '\n' +
        '  b     p      b  ' + '\n' +
        '  b            b  ' + '\n' +
        '  bbbbbb bbbbbbb  ' + '\n' +
        '     b     b      ' + '\n' +
        '     b     b      ' + '\n' +
        '                  ' + '\n' +
        '     b     b      ' + '\n' +
        '     b     b      ' + '\n' +
        '     bbbbbbb      ' + '\n' +
        '                  ' + '\n' +
        '                  ' + '\n' +
        '  bbbbbb bbbbbbb  ' + '\n' +
        '  b            b  ' + '\n' +
        '  b     t      b  ' + '\n' +
        '  b            b  ',

        '<p>Числа между скобок настоящие программисты называют параметрами. Или аргументами, кому как нравится.\
        Правда, тебе не обязательно это запоминать, но если запомнишь, то ты молодец!\
        <p>А вот тебе вопрос: как ты думаешь, сколько проедет танк, если написать <span class="inline-code">forward(1)</span>?\
        Да, он проедет одну клетку, ведь между скобками написано <span class="inline-code">1</span>.\
        А ты помнишь, что в первом и втором уровне ты не писал никаких чисел между скобками, и танк тоже ехал одну клетку?\
        И вот сейчас получается что команда <span class="inline-code">forward(1)</span>\
        ничем не отличается от команды <span class="inline-code">forward()</span>.\
        <p>Так получается потому что команда передвигает танк на одну клетку, и если между скобками числа нет,\
        то она больше ничего не делает. А если там <span class="inline-code">1</span>, то она видит,\
        что танк уже проехал одну клетку, и тоже больше ничего не делает.\
        <p>Наверное, ты уже понял что писать <span class="inline-code">1</span> между скобками не обязательно.\
        Кстати, такие "необязательные" числа программисты называют "числами по умолчанию".\
        Впрочем, это тоже не обязательно запоминать. А нужно запомнить только то, что для всех команд которые ты уже знаешь\
        единицу в скобках можно не писать если танку нужно проехать только одну клетку или повернуть только один раз.',

        [
            { name: 'forward( разы = 1 )', description: 'ехать вперёд' },
            { name: 'left( разы = 1 )', description: 'повернуть налево' },
            { name: 'right( разы = 1 )', description: 'повернуть направо' },
        ]
    ),

    new Level(
        'Пятый уровень: препятствия',

        'bbbbbbbbbbbbbbbbbb' + '\n' +
        'b                b' + '\n' +
        'b                b' + '\n' +
        'b        t       b' + '\n' +
        'b                b' + '\n' +
        'bbbbbbbbbbbbbb  bb' + '\n' +
        'b                b' + '\n' +
        'bb bbbbbbbbbbbbbbb' + '\n' +
        'b                b' + '\n' +
        'bbbbbbbbbbbbbb  bb' + '\n' +
        'b                b' + '\n' +
        'b        p       b' + '\n' +
        'b                b' + '\n' +
        'b                b' + '\n' +
        'b                b' + '\n' +
        'bbbbbbbbbbbbbbbbbb',

        '<p>На прошлом уровне ящики помешали проехать к кружку напрямую, и их пришлось объехать.\
        Но программа не будет очень длинной, если помнить для чего нужны числа между скобок.\
        <p>Как ты помнишь, ниже есть справочник с командами.\
        В нём между скобкок у каждой команды написано <span class="inline-code">разы = 1</span>.\
        Это напоминание, что число между скобками – это <span class="inline-code">разы</span>,\
        то есть, сколько раз нужно повторить команду.\
        А если между скобок ничего не написать, то команда просто выполнится <span class="inline-code">1</span> раз.',

        [
            { name: 'forward( разы = 1 )', description: 'ехать вперёд' },
            { name: 'left( разы = 1 )', description: 'повернуть налево' },
            { name: 'right( разы = 1 )', description: 'повернуть направо' },
        ]
    ),

    new Level(
        'Шестой уровень: выстрелы',

        'bbbbbbbbbbbbbbbbbb' + '\n' +
        'b                b' + '\n' +
        'b                b' + '\n' +
        'b        t       b' + '\n' +
        'b                b' + '\n' +
        'bbbbbbbbbbbbbb  bb' + '\n' +
        'b                b' + '\n' +
        'bb bbbbbbbbbbbbbbb' + '\n' +
        'b                b' + '\n' +
        'bbbbbbbbbbbbbb  bb' + '\n' +
        'b                b' + '\n' +
        'b        p       b' + '\n' +
        'b                b' + '\n' +
        'b                b' + '\n' +
        'b                b' + '\n' +
        'bbbbbbbbbbbbbbbbbb',

        '<p>Танк умеет стрелять с помощью команды <span class="inline-code">fire</span>.\
        От выстрелов ящики разрушаются.\
        Помни, что одной командой <span class="inline-code">fire</span> можно выстрелить несколько раз\
        если ей записать число между скобок.\
        <p>Наверное, ты легко догадаешься в какие ящики надо стрелять чтобы проложить короткий путь к кружку,\
        а значит, программа должна получиться намного короче чем в прошлый раз.',

        [
            { name: 'forward( разы = 1 )', description: 'ехать вперёд' },
            { name: 'left( разы = 1 )', description: 'повернуть налево' },
            { name: 'right( разы = 1 )', description: 'повернуть направо' },
            { name: 'fire( разы = 1 )', description: 'выстрелить' },
        ]
    ),

    new Level(
        'Седьмой уровень: насколько целей',

        'bbbbbbbbbbbbbbbbbb' + '\n' +
        'b                b' + '\n' +
        'b t            t b' + '\n' +
        'b                b' + '\n' +
        'b                b' + '\n' +
        'b      sssss     b' + '\n' +
        'b      s   s     b' + '\n' +
        'b      s p       b' + '\n' +
        'b      s   s     b' + '\n' +
        'b      sssss     b' + '\n' +
        'b                b' + '\n' +
        'b                b' + '\n' +
        'b                b' + '\n' +
        'b t            t b' + '\n' +
        'b                b' + '\n' +
        'bbbbbbbbbbbbbbbbbb',

        '<p>В игре может быть несколько клеток с кружками, и танк дожен побывать на каждой из них.\
        <p>Кстати, камни – не ящики, их нельзя разбить выстрелами',

        [
            { name: 'forward( разы = 1 )', description: 'ехать вперёд' },
            { name: 'left( разы = 1 )', description: 'повернуть налево' },
            { name: 'right( разы = 1 )', description: 'повернуть направо' },
            { name: 'fire( разы = 1 )', description: 'выстрелить' },
        ]
    ),
    /*
    new Level(
        'Седьмой уровень: повторы',

        'bbbbbbbbbbbbbbbbbb' + '\n' +
        'b                b' + '\n' +
        'b t            t b' + '\n' +
        'b                b' + '\n' +
        'b                b' + '\n' +
        'b      sssss     b' + '\n' +
        'b      s   s     b' + '\n' +
        'b      s p       b' + '\n' +
        'b      s   s     b' + '\n' +
        'b      sssss     b' + '\n' +
        'b                b' + '\n' +
        'b                b' + '\n' +
        'b                b' + '\n' +
        'b t            t b' + '\n' +
        'b                b' + '\n' +
        'bbbbbbbbbbbbbbbbbb',

        '<p>Часто бывает так, что нужно повторять одни и те же команды несколько раз подряд.\
        Например, чтобы выстрелить с места во все 4 стороны, надо сначала выстрелить,\
        потом повернуть, потом опять выстрелить, потом опять повернуть, и так далее\
        пока не будет сделано 4 выстрела и 3 поворота. То есть, надо записать 7 команд.\
        Но легко увидеть, что всё время повторяются один и те же 2 команды.\
        <p>Коротко записать повторения команд можно так:\
              <pre><code class="js">' +
                'for (i = 0; i < 4; i += 1) {\n'+
                '    fire();\n'+
                '    left();\n'+
                '}\n'+
            '</code></pre>\
        Первая строчка означает вот что:\
        <ul>\
          <li><span class="inline-code">for ()</span>\
          <li>\
          <li>\
          <li>\
        </ul>\
        ',

        [
            { name: 'forward( разы = 1 )', description: 'ехать вперёд' },
            { name: 'left( разы = 1 )', description: 'повернуть налево' },
            { name: 'right( разы = 1 )', description: 'повернуть направо' },
            { name: 'fire( разы = 1 )', description: 'выстрелить' },
        ]
    ),*/
];